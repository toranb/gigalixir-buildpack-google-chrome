#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Detect requested channel or default to stable
if [ -f $ENV_DIR/GOOGLE_CHROME_CHANNEL ]; then
  channel=$(cat $ENV_DIR/GOOGLE_CHROME_CHANNEL)
else
  channel=stable
fi

# Setup bin and shim locations for desired channel, and detect invalid channels
case "$channel" in
  "stable")
    BIN=chrome/chrome
    SHIM=google-chrome-stable
    ;;
  "beta")
    BIN=chrome-beta/chrome
    SHIM=google-chrome-beta
    ;;
  "unstable")
    BIN=chrome-unstable/chrome
    SHIM=google-chrome-unstable
    ;;
  *)
    error "GOOGLE_CHROME_CHANNEL must be 'stable', 'beta', or 'unstable', not '$channel'."
    ;;
esac

# the package list is found by using ci:debug then running ldd $GOOGLE_CHROME_BIN | grep not
# also look here for more packages/notes https://developers.google.com/web/tools/puppeteer/troubleshooting
PACKAGES="
  gconf-service
  libappindicator1
  libasound2
  libatk1.0-0
  libatk-bridge2.0-0
  libcairo-gobject2
  libgconf-2-4
  libgtk-3-0
  libnspr4
  libnss3
  libx11-xcb1
  libxcomposite1
  libxcursor1
  libxdamage1
  libxfixes3
  libxi6
  libxinerama1
  libxrandr2
  libxss1
  libxtst6
  libatspi2.0
  fonts-liberation
"

if [ ! -f $CACHE_DIR/PURGED_CACHE_V1 ]; then
  topic "Purging cache"
  rm -rf $CACHE_DIR/apt
  rm -rf $CACHE_DIR/archives
  rm -rf $CACHE_DIR/lists
  touch $CACHE_DIR/PURGED_CACHE_V1
fi

topic "Installing Google Chrome from the $channel channel."

PACKAGES="$PACKAGES google-chrome-${channel}"
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_SOURCE_FILE="$CACHE_DIR/apt/sources.list"
APT_TRUSTED_PARTS="$HOME/.gnupg"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

find /etc/apt/
cp /etc/apt/sources.list $APT_SOURCE_FILE

topic "Importing google chrome key"
gpg --keyserver keyserver.ubuntu.com --recv-keys 6494C6D6997C215E

echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> $APT_SOURCE_FILE

APT_OPTIONS="-o debug::nolocking=true -o Dir::Etc::TrustedParts=$APT_TRUSTED_PARTS -o Dir::Cache=$APT_CACHE_DIR -o Dir::State=$APT_STATE_DIR -o Dir::Etc::SourceList=$APT_SOURCE_FILE"

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

for PACKAGE in $PACKAGES; do
  if [[ $PACKAGE == *deb ]]; then
    PACKAGE_NAME=$(basename $PACKAGE .deb)
    PACKAGE_FILE=$APT_CACHE_DIR/archives/$PACKAGE_NAME.deb

    topic "Fetching $PACKAGE"
    curl -s -L -z $PACKAGE_FILE -o $PACKAGE_FILE $PACKAGE 2>&1 | indent
  else
    topic "Fetching .debs for $PACKAGE"
    apt-get $APT_OPTIONS -y --force-yes -d install --reinstall $PACKAGE | indent
  fi
done

mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
export PATH="\$HOME/.apt/opt/google/chrome:\$HOME/.apt/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF

export PATH="$BUILD_DIR/.apt/opt/google/chrome:$BUILD_DIR/.apt/usr/bin:$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"

#give environment to later buildpacks
export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)='  > "$LP_DIR/export"

topic "Rewrite package-config files"
find $BUILD_DIR/.apt -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$BUILD_DIR"'/.apt\1!g'

topic "Creating google-chrome shims"

cat <<EOF > $BUILD_DIR/.profile.d/010_google-chrome.sh
export GOOGLE_CHROME_BIN="\$HOME/.apt/opt/google/$BIN"
EOF
